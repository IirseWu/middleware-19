<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderMapper">
	
	<!--表名 -->
	<sql id="tableName">
		r_sys_order
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		ORDERID,	
		USERID,	
		ROBOTID,	
		CONTENT,	
		THIRDNO,	
		OURNO,	
		CREATETIME,	
		STARTTIME,	
		ENDTTIME,	
		GRADEFROM,	
		LASTORDERID,	
		COST,	
		LASTCOST,
		PAYMETHOD,	
		STRATEGYID,	
		STATUS,	
		ISPAY,	
		REMAIN1,	
		REMAIN2,	
		REMAIN3
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{ORDERID},	
		#{USERID},	
		#{ROBOTID},	
		#{CONTENT},	
		#{THIRDNO},	
		#{OURNO},	
		#{CREATETIME},	
		#{STARTTIME},	
		#{ENDTTIME},	
		#{GRADEFROM},	
		#{LASTORDERID},	
		#{COST},	
		#{LASTCOST},
		#{PAYMETHOD},	
		#{STRATEGYID},	
		#{STATUS},	
		#{ISPAY},	
		#{REMAIN1},	
		#{REMAIN2},	
		#{REMAIN3}
	</sql>
	
	<!-- 插入退款记录-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(	
		USERID,	
		ROBOTID,	
		CONTENT,	
		THIRDNO,	
		OURNO,	
		CREATETIME,	
		STARTTIME,	
		ENDTTIME,	
		GRADEFROM,	
		LASTORDERID,	
		COST,	
		PAYMETHOD,	
		STRATEGYID,	
		STATUS,	
		ISPAY,	
		REMAIN1,	
		REMAIN2,	
		REMAIN3
		) values (
		#{USERID},	
		#{ROBOTID},	
		'退款',	
		#{THIRDNO},	
		#{OURNO},	
		NOW(),	
		NOW(),	
		#{ENDTTIME},	
		#{GRADEFROM},	
		#{LASTORDERID},	
		#{COST},	
		#{PAYMETHOD},	
		#{STRATEGYID},	
		#{STATUS},	
		#{ISPAY},	
		#{REMAIN1},	
		#{REMAIN2},	
		#{REMAIN3}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ORDERID = #{ORDERID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			LASTCOST = #{LASTCOST},
			REASON = #{REASON},
			PS = #{PS}
		where 
		ORDERID = #{ORDERID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			ORDERID = #{ORDERID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				ORDERID = ${pd.keywords}
		</if>
		<if test="pd.USERID!= null and pd.USERID != ''"><!-- 关键词检索 -->
			and
				USERID = ${pd.USERID}
		</if>
		<if test="pd.STARTTIME!= null and pd.STARTTIME!= ''"><!-- 关键词检索 -->
			and
				STARTTIME >=  '${pd.STARTTIME}'
		</if>
		<if test="pd.ENDTIME!= null and pd.ENDTIME != ''"><!-- 关键词检索 -->
			and
				ENDTIME = '${pd.ENDTIME}'
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ORDERID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

	<!-- fh313596790qq(青苔) -->
	
	
	<!-- 新增退款-->
	<insert id="refund" parameterType="pd">
		insert into 
	r_sys_refund
		(
		REFUNDID,	
		USERID,	
		ORDERID,	
		CONTENT,	
		THIRDNO,	
		CREATETIME,	
		COST,	
		REASON,	
		PS,	
		REMAIN1,	
		REMAIN2,	
		REMAIN3
		) values (
	
		#{REFUNDID},	
		#{USERID},	
		#{ORDERID},	
		#{CONTENT},	
		#{THIRDNO},	
		NOW(),	
		#{COST},	
		#{REASON},	
		#{PS},	
		#{REMAIN1},	
		#{REMAIN2},	
		#{REMAIN3}
		)
	</insert>
	
	
	<!-- 通过ID获取退款 -->
	<select id="findRefundById" parameterType="pd" resultType="pd">
		select 
		REFUNDID,	
		USERID,	
		ORDERID,	
		CONTENT,	
		THIRDNO,	
		CREATETIME,	
		COST,	
		REASON,	
		PS,	
		REMAIN1,	
		REMAIN2,	
		REMAIN3
		from 
		r_sys_refund
		where 
			ORDERID = #{ORDERID}
	</select>
	
	
	<!-- 昨日销售总额 -->
	<select id="daysum" parameterType="pd" resultType="pd">
		select
		sum(cost) AS daysum
		from 
		r_sys_order
		WHERE TO_DAYS(NOW())-TO_DAYS(CREATETIME)=1
	</select>
	
	<!-- 昨日订单总数 -->
	<select id="daycount" parameterType="pd" resultType="pd">
		select
		count(orderid) AS daycount
		from 
		r_sys_order
		WHERE TO_DAYS(NOW())-TO_DAYS(CREATETIME)=1
	</select>
	
	<!-- 本月销售总额 -->
	<select id="monthsum" parameterType="pd" resultType="pd">
		select
		sum(cost) AS monthsum
		from 
		r_sys_order
		WHERE DATE_FORMAT( CREATETIME, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
	</select>
	
	<!-- 本月订单总数 -->
	<select id="monthcount" parameterType="pd" resultType="pd">
		select
		count(orderid) AS monthcount
		from 
		r_sys_order
		WHERE DATE_FORMAT( CREATETIME, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
	</select>
	
	<!-- 时间段内的注册用户数 -->
	<select id="memberstatic" parameterType="pd" resultType="pd">
		SELECT 
		TO_DAYS(#{STARTTIME}) as start,
		TO_DAYS(#{ENDTIME}) as end,
		TO_DAYS(createTime) as count, 
		DATE_FORMAT(createTime,'%Y-%m-%d') as time , 
		count(*) as num 
		FROM r_sys_user 
		<![CDATA[ where createTime >=  #{STARTTIME} AND createTime <= #{ENDTIME} ]]> 
		GROUP BY  time 
	</select>
	
	<!-- 时间段内的付费用户数（订单数） -->
	<select id="memberstatic2" parameterType="pd" resultType="pd">
		SELECT 
		TO_DAYS(createTime) as count, 
		DATE_FORMAT(createTime,'%Y-%m-%d') as time , 
		count(*) as num2 
		FROM r_sys_order 
		<![CDATA[ where createTime >=  #{STARTTIME} AND createTime <= #{ENDTIME} ]]> 
		GROUP BY  time 
	</select>
	
	<!-- 时间段内的收入增长 -->
	<select id="incomestatic" parameterType="pd" resultType="pd">
		select
		TO_DAYS(#{STARTTIME2}) as start,
		TO_DAYS(#{ENDTIME2}) as end,  
		TO_DAYS(createTime) as count,
		DATE_FORMAT(createTime,'%Y-%m-%d') as time,
        sum(case when
        o.content='高级版'  then cost else 0 end) num1 ,
        sum(case when
        o.content='至尊版' then cost else 0 end) num2 ,
        sum(case when 
        o.content='尊享版' then cost else 0 end) num3 
        from r_sys_order o
        <![CDATA[ where createTime >=  #{STARTTIME2} AND createTime <= #{ENDTIME2} ]]> 
		GROUP BY time
	</select>
	
</mapper>